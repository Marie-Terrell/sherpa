#Allow all jobs in the pipeline to be canceled automatically if a newer pipeline
# is kicked off on the same branch before the first run is complete.
# Important if multiple PRs are merged to a branch in succession.
# We disable this below for the deploy job (which disables this for
# all jobs after "deploy")
default:
  interruptible: true

stages:
  - version
  - build and package
  - deploy
  - test deploy

#See this doc for GitLab's recommendation for passing env variables between jobs:
# https://docs.gitlab.com/ee/ci/variables/index.html#pass-an-environment-variable-to-another-job
define-version:
  stage: version
  image: registry.gitlab.com/cxc-sherpa/sherpa/sherpa-docker-build:main
  tags:
    - sherpa
  script:
    - export SHERPA_FULL_VERSION=$(git describe --tags --always)
    - export SHERPA_VERSION=`echo $SHERPA_FULL_VERSION | awk '{split($0,a,"-"); print a[1]}'`
    - export SHERPA_BUILD_NUMBER=`echo $SHERPA_FULL_VERSION | awk '{split($0,a,"-"); print a[2]}'`
    - echo "SHERPA_VERSION=${SHERPA_VERSION}" >> version.env
    - echo "SHERPA_BUILD_NUMBER=${SHERPA_BUILD_NUMBER:-0}" >> version.env
    - echo "SHERPA_BUILD_NUMBER=${SHERPA_BUILD_NUMBER:-0}"
  artifacts:
    reports:
      dotenv: version.env
    expire_in: "3 days"

.template-conda-build: &template_conda_build
  stage: build and package
  dependencies:
    - define-version
  script:
      - conda build --python ${SHERPA_PYTHON_VERSION} --output-folder /tmp/packages recipes/conda       #Specifying Python version with "--python 3.*" is required to allow selectors like "# [py>39]" to work
      - cp -r /tmp/packages .
  artifacts:
    expire_in: "3 days"
    paths:
        - packages/

.template-linux-conda-build: &template_linux_conda_build
  <<: *template_conda_build
  image: registry.gitlab.com/cxc-sherpa/sherpa/sherpa-docker-build:main
  tags:
    - sherpa

.template-macos-conda-build: &template_macos_conda_build
  <<: *template_conda_build
  tags:
      - sherpa-macos-build

macos-python3.8-conda-build:
  <<: *template_macos_conda_build
  variables:
      SHERPA_PYTHON_VERSION: "3.8.*"

macos-python3.9-conda-build:
  <<: *template_macos_conda_build
  variables:
      SHERPA_PYTHON_VERSION: "3.9.*"

macos-python3.10-conda-build:
  <<: *template_macos_conda_build
  variables:
      SHERPA_PYTHON_VERSION: "3.10.*"

linux-python3.8-conda-build:
  <<: *template_linux_conda_build
  variables:
    SHERPA_PYTHON_VERSION: '3.8.*'

linux-python3.9-conda-build:
  <<: *template_linux_conda_build
  variables:
    SHERPA_PYTHON_VERSION: '3.9.*'

linux-python3.10-conda-build:
  <<: *template_linux_conda_build
  variables:
    SHERPA_PYTHON_VERSION: '3.10.*'

conda:
  stage: deploy
  tags:
      - sherpa
  image: registry.gitlab.com/cxc-sherpa/sherpa/sherpa-docker-build:main
  interruptible: false
  dependencies:
      - linux-python3.8-conda-build
      - linux-python3.9-conda-build
      - linux-python3.10-conda-build
      - macos-python3.8-conda-build
      - macos-python3.9-conda-build
      - macos-python3.10-conda-build
  script:
      - echo $CONDA_UPLOAD_TOKEN
      - anaconda -t $CONDA_UPLOAD_TOKEN upload -u sherpa -c dev packages/linux-64/sherpa* --force
      - anaconda -t $CONDA_UPLOAD_TOKEN upload -u sherpa -c dev packages/osx-64/sherpa* --force

.template-linux-test: &template-linux-test
  stage: test deploy
  image: centos:7
  dependencies:
    - define-version
  variables:
      PAGER: 'less'
  before_script:
      - yum install -y -q bzip2 libXext libSM libXrender curl less
  script:
      - cd /
      - curl -LO -k http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      - curl -LO -k https://github.com/sherpa/sherpa-test-data/archive/main.zip # Hack, gitlab can't checkout the submodule from github
      - bash Miniconda3-latest-Linux-x86_64.sh -b -p ~/miniconda
      - source ~/miniconda/etc/profile.d/conda.sh
      - conda activate
      - conda update -qq -y --all
      - conda create -n test38 --yes -q -c sherpa/label/dev python=3.8 astropy sherpa==${SHERPA_VERSION}=py*_${SHERPA_BUILD_NUMBER} matplotlib
      - conda activate test38
      - pip install /main.zip
      - sherpa_smoke -f astropy
      - sherpa_test
      - conda create -n test39 --yes -q -c sherpa/label/dev python=3.9 astropy sherpa==${SHERPA_VERSION}=py*_${SHERPA_BUILD_NUMBER} matplotlib
      - conda activate test39
      - pip install /main.zip
      - sherpa_smoke -f astropy
      - sherpa_test
      - conda create -n test310 --yes -q -c sherpa/label/dev python=3.10 astropy sherpa==${SHERPA_VERSION}=py*_${SHERPA_BUILD_NUMBER} matplotlib
      - conda activate test310
      - pip install /main.zip
      - sherpa_smoke -f astropy
      - sherpa_test

.template-macos-test: &template-macos-test
  tags:
    - sherpa-macos-build
  stage: test deploy
  dependencies:
    - define-version
  script:
    - cd /tmp
    - curl -LO -k https://github.com/sherpa/sherpa-test-data/archive/main.zip
    - conda update -qq -y --all
    - conda create -n test38 --yes -q -c sherpa/label/dev python=3.8 astropy sherpa==${SHERPA_VERSION}=py*_${SHERPA_BUILD_NUMBER} matplotlib
    - conda activate test38
    - pip install main.zip
    - sherpa_smoke -f astropy
    - sherpa_test
    - conda create -n test39 --yes -q -c sherpa/label/dev python=3.9 astropy sherpa==${SHERPA_VERSION}=py*_${SHERPA_BUILD_NUMBER} matplotlib
    - conda activate test39
    - pip install main.zip
    - sherpa_smoke -f astropy
    - sherpa_test
    - conda create -n test310 --yes -q -c sherpa/label/dev python=3.10 astropy sherpa==${SHERPA_VERSION}=py*_${SHERPA_BUILD_NUMBER} matplotlib
    - conda activate test310
    - pip install main.zip
    - sherpa_smoke -f astropy
    - sherpa_test

centos7-test:
  <<: *template-linux-test
  image: centos:7

ubuntu18-test:
  <<: *template-linux-test
  image: ubuntu:18.04
  before_script:
      - apt-get update && apt-get install -y -q bzip2 curl libxext6 libsm6 libxrender1 less

ubuntu20-test:
  <<: *template-linux-test
  image: ubuntu:20.04
  before_script:
      - apt-get update && apt-get install -y -q bzip2 curl libxext6 libsm6 libxrender1 less

ubuntu22-test:
  <<: *template-linux-test
  image: ubuntu:22.04
  before_script:
      - apt-get update && apt-get install -y -q bzip2 curl libxext6 libsm6 libxrender1 less

fedora35-test:
  <<: *template-linux-test
  image: fedora:35

fedora36-test:
  <<: *template-linux-test
  image: fedora:36

macos-10.13-test:
  <<: *template-macos-test
